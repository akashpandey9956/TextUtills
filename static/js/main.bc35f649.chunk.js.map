{"version":3,"sources":["components/NavBar.js","components/TextForm.js","components/Example.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","onChange","event","target","value","backgroundColor","rows","handleUpClick","newText","toUpperCase","handleLoClick","toLowerCase","handleInvClick","split","map","word","newWord","i","length","char","charAt","join","handleCopy","console","log","document","getElementById","select","navigator","clipboard","writeText","Example","alert","Alert","variant","dismissible","lower","slice","capitalize","msg","App","setMode","setAlert","showAlert","message","action","act","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.bc35f649.chunk.js","sourcesContent":["import React from 'react'\r\nimport { PropTypes } from \"prop-types\"\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <div>\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/Home\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/#\">About</a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch mx-4 text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\nNavBar.propTypes= {\r\n        title : PropTypes.string.isRequired\r\n}\r\n\r\n// NavBar.defaultProps= {\r\n//                       title:'set your title here'\r\n\r\n// };\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    // console.log(\"button was clicked\"+text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n  const handleLoClick = ()=>{\r\n    // console.log(\"button was clicked\"+text);\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n  const handleInvClick = ()=>{\r\n    let word=text.split(\" \");\r\n    let newText=word.map((word)=>{\r\n      let newWord=\"\";\r\n      for(let i=0; i<word.length; i++){\r\n        let char=word.charAt(i);\r\n        if(char>=\"A\" && char<=\"Z\"){\r\n          char=char.toLowerCase();\r\n        }\r\n        else if(char>=\"a\" && char<=\"z\"){\r\n          char=char.toUpperCase();\r\n  \r\n        }\r\n        newWord+=char;\r\n      }\r\n    return newWord;\r\n    }).join(\" \");\r\n    \r\n    setText(newText);\r\n  };\r\n  const handleCopy =()=>{\r\n    console.log(\"I am copy\")\r\n    var text=document.getElementById(\"myBox\")\r\n    text.select()\r\n    navigator.clipboard.writeText(text.value)\r\n  }\r\n  const handleOnChange = (event)=>{\r\n    // console.log(\"onchange\");\r\n    setText(event.target.value);\r\n  }\r\n  const[text, setText] = useState(\"\");\r\n  // setText(\"this is new text\"); //way to change state \r\n  return (\r\n    <>\r\n    <div>\r\n        <div className=\"mb-3\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n          <h3>{props.heading}</h3>\r\n        <textarea className=\"form-control\" onChange={handleOnChange} style={{backgroundColor : props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} value = {text} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleInvClick}>Invert Case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n    </div>\r\n    <div className=\"container\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n      <h1>Text summary</h1>\r\n      {text.split(\" \").length-1} words and {text.length} Letters\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","// import { useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n// import Button from 'react-bootstrap/Button';\r\nimport * as React from 'react'\r\n\r\nexport default function Example(props) {\r\n  const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n    return (\r\n      props.alert &&\r\n      <Alert variant={`${props.alert.type}`}  dismissible>\r\n        {capitalize(props.alert.type)}: {props.alert.msg}\r\n      </Alert>\r\n    );\r\n}\r\n\r\n// export default Example;","\r\nimport React,{ useState } from 'react';\r\nimport './App.css';\r\n// import About from './components/About';\r\nimport NavBar from './components/NavBar';\r\nimport TextForm from './components/TextForm';\r\nimport Example from './components/Example';\r\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\n// import { createRoot } from \"react-dom/client\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route\r\n// } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [mode,setMode] = useState('light');\r\n  const [alert,setAlert] = useState(null);\r\n  const showAlert=(message,type,action) =>{\r\n    setAlert(\r\n      {\r\n        msg:message,\r\n        type:type,\r\n        act:action\r\n\r\n      }\r\n    )\r\n  }\r\n  const toggleMode=()=>{\r\n    if(mode==='dark'){\r\n      setMode('light')\r\n      document.body.style.backgroundColor=\"white\"\r\n      showAlert(\"Light mode has been Enabled\",\"warning\",\"dismissible\");\r\n    }\r\n    else{\r\n      setMode(\"dark\")\r\n      document.body.style.backgroundColor=\"grey\"\r\n      showAlert(\"Dark mode has been Enabled\",\"success\",\"dismissible\");\r\n    }\r\n  }\r\n  return (\r\n   <>\r\n   {/* <Router>  */}\r\n   <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\r\n  <Example alert={alert}/>\r\n  <div className=\"container my-3\">\r\n  {/* <Switch>\r\n        <Route exact path=\"/About\">\r\n          <About/>\r\n        </Route>\r\n        <Route exact path=\"/Home\"> */}\r\n        <TextForm heading=\"Enter Text\" mode={mode}/>\r\n        {/* </Route>\r\n  </Switch> */}\r\n  </div>\r\n  {/* </Router> */}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}